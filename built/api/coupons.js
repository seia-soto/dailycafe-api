import { baseClient } from '../index.js';
import { getDateFromNonStandardString } from '../utils.js';
export const reformCouponResponse = async (coupon)=>({
        name: coupon.goodsName || coupon.title,
        image: coupon.imageUri || coupon.goodsDiscountImageUri,
        pricing: {
            original: coupon.goodsPrice,
            discounted: coupon.discountPrice
        },
        amount: {
            total: coupon.salesLimitCount,
            sold: coupon.orderCnt
        },
        closeAt: getDateFromNonStandardString(coupon.closingDate),
        endAt: getDateFromNonStandardString(coupon.endDate),
        isValid: coupon.isValid === 'y'
    })
;
export const getDailyDiscounts = async (client = baseClient)=>{
    const response = await client.post('coupon/today/todayDiscountListPermitted').json();
    return {
        paging: {
            current: response.page,
            total: response.totalPageCnt
        },
        items: response.data.map((item)=>reformCouponResponse(item)
        ),
        response
    };
};
export const getRecentSeen = async (client = baseClient)=>{
    const response = await client.post('coupon/today/recentViewCouponList').json();
    return {
        paging: {
            current: response.page,
            total: response.totalPageCnt
        },
        items: response.data.map((item)=>reformCouponResponse(item)
        ),
        response
    };
};
export const getInterestedByFriends = async (client = baseClient)=>{
    const response = await client.post('coupon/today/concernCouponListPermitted').json();
    return {
        paging: {
            current: response.page,
            total: response.totalPageCnt
        },
        items: response.data.map((item)=>reformCouponResponse(item)
        ),
        response
    };
};
export const getFeaturedDiscounts = async (client = baseClient)=>{
    const response = await client.post('coupon/today/likeBrandCouponListPermitted').json();
    return {
        paging: {
            current: response.page,
            total: response.totalPageCnt
        },
        brand: {
            name: response.data.likeBrandName,
            isLikedByUser: response.data.likeBrandYn === 'y'
        },
        items: response.data.list.map((item)=>reformCouponResponse(item)
        ),
        response
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcGkvY291cG9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHb3QgfSBmcm9tICdnb3QvZGlzdC9zb3VyY2UnXG5pbXBvcnQgeyBiYXNlQ2xpZW50IH0gZnJvbSAnLi4vaW5kZXguanMnXG5pbXBvcnQgeyBnZXREYXRlRnJvbU5vblN0YW5kYXJkU3RyaW5nIH0gZnJvbSAnLi4vdXRpbHMuanMnXG5pbXBvcnQgeyBJQmFzZVJlc3BvbnNlLCBUWWVzT3JObyB9IGZyb20gJy4vYmFzZS5qcydcblxuZXhwb3J0IGludGVyZmFjZSBJQ291cG9uUmVzcG9uc2Uge1xuICBhY3RpdmVJbmRleDogbnVtYmVyIHwgbnVsbCxcbiAgYWRkUm93czogbnVtYmVyLFxuICBhbGFybVluOiBib29sZWFuIHwgbnVsbCxcbiAgYmVnaW5Sb3c6IG51bWJlcixcbiAgYmxvY2tDbnQ6IG51bWJlcixcbiAgYnJhbmREaXNjb3VudFByaWNlOiBudW1iZXIgfCBudWxsLFxuICBicmFuZERpc2NvdW50UmF0ZTogbnVtYmVyIHwgbnVsbCxcbiAgYnJhbmRObzogbnVtYmVyIHwgbnVsbCxcbiAgY2FyZE5hbWU6IHN0cmluZyB8IG51bGwsXG4gIGNhcmRObzogbnVtYmVyIHwgbnVsbCxcbiAgY2xvc2luZ0RhdGU6IHN0cmluZ1xuICBjbG9zaW5nWW46IFRZZXNPck5vLFxuICBjbnQ6IG51bWJlciB8IG51bGwsXG4gIGNvbmNlcm5DbnQ6IG51bWJlciB8IG51bGwsXG4gIGNvbmNlcm5TZXE6IG51bWJlciB8IG51bGwsXG4gIGNvbnRlbnQ6IHN0cmluZyB8IG51bGwsXG4gIGNvbnRlbnRIdG1sOiBzdHJpbmcgfCBudWxsLFxuICBkYWlseW1hbGxObzogbnVtYmVyLFxuICBkYXRlRGlmZjogc3RyaW5nIHwgbnVsbCxcbiAgZGVsRmlsZXNTZXE6IG51bWJlciB8IG51bGwsXG4gIGRpc2NvdW50UHJpY2U6IG51bWJlcixcbiAgZGlzY291bnRSYXRlOiBudW1iZXIsXG4gIGRpc2NvdW50U2VxOiBudW1iZXIsXG4gIGRpc2NvdW50VHlwZTogbnVtYmVyLFxuICBlbmREYXRlOiBzdHJpbmcsXG4gIGVuZFJvdzogbnVtYmVyLFxuICBldmVudElkOiBudW1iZXIgfCBudWxsLFxuICBldmVudE5hbWU6IHN0cmluZyB8IG51bGwsXG4gIGV4cGlyZURhdGVTdHJpbmc6IHN0cmluZyB8IG51bGwsXG4gIGdvb2RzRGlzY291bnRJbWFnZVVyaTogc3RyaW5nLFxuICBnb29kc0lkOiBzdHJpbmcgfCBudWxsLFxuICBnb29kc0ltYWdlVXJsOiBzdHJpbmcgfCBudWxsLFxuICBnb29kc05hbWU6IHN0cmluZyxcbiAgZ29vZHNQcmljZTogbnVtYmVyLFxuICBndWJ1bjE6IHN0cmluZyB8IG51bGwsXG4gIGd1YnVuMjogc3RyaW5nIHwgbnVsbCxcbiAgaW1hZ2VVcmk6IHN0cmluZyxcbiAgaXNFZGl0b3JZbjogVFllc09yTm8gfCBudWxsLFxuICBpc1ZhbGlkOiBUWWVzT3JObyxcbiAgaXRlbUFycjogQXJyYXk8dW5rbm93bj4gfCBudWxsLFxuICBsYXN0dmFsdWU6IHVua25vd24gfCBudWxsLFxuICBsaWtlQ250OiBudW1iZXIgfCBudWxsLFxuICBsaWtlWW46IFRZZXNPck5vIHwgbnVsbCxcbiAgbWFpblNjcm9sbDogdW5rbm93biB8IG51bGwsXG4gIG1lZGlhVHlwZTogdW5rbm93biB8IG51bGwsXG4gIG1lZGlhVXJpOiBzdHJpbmcgfCBudWxsLFxuICBtZW1iZXJObzogbnVtYmVyIHwgbnVsbCxcbiAgbWVudVR5cGU6IHVua25vd24gfCBudWxsLFxuICBtbXNNZXNzYWdlOiB1bmtub3duIHwgbnVsbCxcbiAgbW9kZTogdW5rbm93biB8IG51bGwsXG4gIG5pY2tuYW1lOiBzdHJpbmcgfCBudWxsLFxuICBvcmRlckNudDogbnVtYmVyLFxuICBvcmlnaW5Hb29kc05hbWU6IHN0cmluZyB8IG51bGwsXG4gIHBhZ2U6IG51bWJlcixcbiAgcHJvZHVjdFR5cGU6IHN0cmluZyxcbiAgcHJvZHVjdFR5cGVOYW1lOiBzdHJpbmcgfCBudWxsLFxuICBwcm9maWxlUGhvdG9Vcmk6IHN0cmluZyB8IG51bGwsXG4gIHJlY29tcGFueUlkOiBudW1iZXIgfCBudWxsLFxuICByZWNvbXBhbnlOYW1lOiBzdHJpbmcgfCBudWxsLFxuICByZWZlcmVyVXJsOiBzdHJpbmcgfCBudWxsLFxuICByZWdEYXRlOiBzdHJpbmcgfCBudWxsLFxuICByZWdHdWJ1bjogc3RyaW5nIHwgbnVsbCxcbiAgcmVuZXdFeHBpcmVEYXRlU3RyaW5nOiBzdHJpbmcgfCBudWxsLFxuICByZXR1cm5Vcmw6IHN0cmluZyB8IG51bGwsXG4gIHJpcHBsZUNudDogbnVtYmVyIHwgbnVsbCxcbiAgcm93czogbnVtYmVyLFxuICBzYWxlc0xpbWl0Q291bnQ6IG51bWJlcixcbiAgc2NoRmllbGQ6IHVua25vd24gfCBudWxsLFxuICBzY2hTdHJpbmc6IHVua25vd24gfCBudWxsLFxuICBzY3JvbGw6IHVua25vd24gfCBudWxsLFxuICBzdGFydERhdGU6IHN0cmluZyB8IG51bGwsXG4gIHN0b3JlTm86IG51bWJlciB8IG51bGwsXG4gIHN1YkRpcjogc3RyaW5nIHwgbnVsbCxcbiAgc3ViTWVudVR5cGU6IG51bWJlciB8IHN0cmluZyB8IG51bGwsXG4gIHN1YlNjcm9sbDogdW5rbm93biB8IG51bGwsXG4gIHRhbGtDYXRlZ29yeU5vOiBudW1iZXIgfCBudWxsLFxuICB0YWxrTm86IG51bWJlciB8IG51bGwsXG4gIHRpdGxlOiBzdHJpbmcsXG4gIHRvdGFsQmxvY2tDbnQ6IG51bWJlcixcbiAgdG90YWxDbnQ6IG51bWJlcixcbiAgdG90YWxQYWdlQ250OiBudW1iZXIsXG4gIHR5cGU6IHVua25vd24gfCBudWxsLFxuICB2aXNpYmxlWW46IFRZZXNPck5vIHwgbnVsbFxufVxuXG5leHBvcnQgY29uc3QgcmVmb3JtQ291cG9uUmVzcG9uc2UgPSBhc3luYyAoY291cG9uOiBJQ291cG9uUmVzcG9uc2UpID0+ICh7XG4gIG5hbWU6IGNvdXBvbi5nb29kc05hbWUgfHwgY291cG9uLnRpdGxlLFxuICBpbWFnZTogY291cG9uLmltYWdlVXJpIHx8IGNvdXBvbi5nb29kc0Rpc2NvdW50SW1hZ2VVcmksXG4gIHByaWNpbmc6IHtcbiAgICBvcmlnaW5hbDogY291cG9uLmdvb2RzUHJpY2UsXG4gICAgZGlzY291bnRlZDogY291cG9uLmRpc2NvdW50UHJpY2VcbiAgfSxcbiAgYW1vdW50OiB7XG4gICAgdG90YWw6IGNvdXBvbi5zYWxlc0xpbWl0Q291bnQsXG4gICAgc29sZDogY291cG9uLm9yZGVyQ250XG4gIH0sXG4gIGNsb3NlQXQ6IGdldERhdGVGcm9tTm9uU3RhbmRhcmRTdHJpbmcoY291cG9uLmNsb3NpbmdEYXRlKSxcbiAgZW5kQXQ6IGdldERhdGVGcm9tTm9uU3RhbmRhcmRTdHJpbmcoY291cG9uLmVuZERhdGUpLFxuICBpc1ZhbGlkOiBjb3Vwb24uaXNWYWxpZCA9PT0gJ3knXG59KVxuXG5leHBvcnQgaW50ZXJmYWNlIElEYWlseURpc2NvdW50c1Jlc3BvbnNlIGV4dGVuZHMgSUJhc2VSZXNwb25zZSB7XG4gIGRhdGE6IEFycmF5PElDb3Vwb25SZXNwb25zZT5cbn1cblxuZXhwb3J0IGNvbnN0IGdldERhaWx5RGlzY291bnRzID0gYXN5bmMgKGNsaWVudDogR290ID0gYmFzZUNsaWVudCkgPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNsaWVudFxuICAgIC5wb3N0KCdjb3Vwb24vdG9kYXkvdG9kYXlEaXNjb3VudExpc3RQZXJtaXR0ZWQnKVxuICAgIC5qc29uPElEYWlseURpc2NvdW50c1Jlc3BvbnNlPigpXG5cbiAgcmV0dXJuIHtcbiAgICBwYWdpbmc6IHtcbiAgICAgIGN1cnJlbnQ6IHJlc3BvbnNlLnBhZ2UsXG4gICAgICB0b3RhbDogcmVzcG9uc2UudG90YWxQYWdlQ250XG4gICAgfSxcbiAgICBpdGVtczogcmVzcG9uc2UuZGF0YS5tYXAoaXRlbSA9PiByZWZvcm1Db3Vwb25SZXNwb25zZShpdGVtKSksXG4gICAgcmVzcG9uc2VcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0UmVjZW50U2VlbiA9IGFzeW5jIChjbGllbnQ6IEdvdCA9IGJhc2VDbGllbnQpID0+IHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjbGllbnRcbiAgICAucG9zdCgnY291cG9uL3RvZGF5L3JlY2VudFZpZXdDb3Vwb25MaXN0JylcbiAgICAuanNvbjxJRGFpbHlEaXNjb3VudHNSZXNwb25zZT4oKVxuXG4gIHJldHVybiB7XG4gICAgcGFnaW5nOiB7XG4gICAgICBjdXJyZW50OiByZXNwb25zZS5wYWdlLFxuICAgICAgdG90YWw6IHJlc3BvbnNlLnRvdGFsUGFnZUNudFxuICAgIH0sXG4gICAgaXRlbXM6IHJlc3BvbnNlLmRhdGEubWFwKGl0ZW0gPT4gcmVmb3JtQ291cG9uUmVzcG9uc2UoaXRlbSkpLFxuICAgIHJlc3BvbnNlXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGdldEludGVyZXN0ZWRCeUZyaWVuZHMgPSBhc3luYyAoY2xpZW50OiBHb3QgPSBiYXNlQ2xpZW50KSA9PiB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50XG4gICAgLnBvc3QoJ2NvdXBvbi90b2RheS9jb25jZXJuQ291cG9uTGlzdFBlcm1pdHRlZCcpXG4gICAgLmpzb248SURhaWx5RGlzY291bnRzUmVzcG9uc2U+KClcblxuICByZXR1cm4ge1xuICAgIHBhZ2luZzoge1xuICAgICAgY3VycmVudDogcmVzcG9uc2UucGFnZSxcbiAgICAgIHRvdGFsOiByZXNwb25zZS50b3RhbFBhZ2VDbnRcbiAgICB9LFxuICAgIGl0ZW1zOiByZXNwb25zZS5kYXRhLm1hcChpdGVtID0+IHJlZm9ybUNvdXBvblJlc3BvbnNlKGl0ZW0pKSxcbiAgICByZXNwb25zZVxuICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUZlYXR1cmVkRGlzY291bnRzQnlMaWtlQ291bnQgZXh0ZW5kcyBJQmFzZVJlc3BvbnNlIHtcbiAgZGF0YToge1xuICAgIGxpa2VCcmFuZE5hbWU6IHN0cmluZyxcbiAgICBsaWtlQnJhbmRZbjogVFllc09yTm8sXG4gICAgbGlzdDogQXJyYXk8SUNvdXBvblJlc3BvbnNlPlxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBnZXRGZWF0dXJlZERpc2NvdW50cyA9IGFzeW5jIChjbGllbnQ6IEdvdCA9IGJhc2VDbGllbnQpID0+IHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjbGllbnRcbiAgICAucG9zdCgnY291cG9uL3RvZGF5L2xpa2VCcmFuZENvdXBvbkxpc3RQZXJtaXR0ZWQnKVxuICAgIC5qc29uPElGZWF0dXJlZERpc2NvdW50c0J5TGlrZUNvdW50PigpXG5cbiAgcmV0dXJuIHtcbiAgICBwYWdpbmc6IHtcbiAgICAgIGN1cnJlbnQ6IHJlc3BvbnNlLnBhZ2UsXG4gICAgICB0b3RhbDogcmVzcG9uc2UudG90YWxQYWdlQ250XG4gICAgfSxcbiAgICBicmFuZDoge1xuICAgICAgbmFtZTogcmVzcG9uc2UuZGF0YS5saWtlQnJhbmROYW1lLFxuICAgICAgaXNMaWtlZEJ5VXNlcjogcmVzcG9uc2UuZGF0YS5saWtlQnJhbmRZbiA9PT0gJ3knXG4gICAgfSxcbiAgICBpdGVtczogcmVzcG9uc2UuZGF0YS5saXN0Lm1hcChpdGVtID0+IHJlZm9ybUNvdXBvblJlc3BvbnNlKGl0ZW0pKSxcbiAgICByZXNwb25zZVxuICB9XG59XG4iXSwibmFtZXMiOlsiYmFzZUNsaWVudCIsImdldERhdGVGcm9tTm9uU3RhbmRhcmRTdHJpbmciLCJyZWZvcm1Db3Vwb25SZXNwb25zZSIsImNvdXBvbiIsIm5hbWUiLCJnb29kc05hbWUiLCJ0aXRsZSIsImltYWdlIiwiaW1hZ2VVcmkiLCJnb29kc0Rpc2NvdW50SW1hZ2VVcmkiLCJwcmljaW5nIiwib3JpZ2luYWwiLCJnb29kc1ByaWNlIiwiZGlzY291bnRlZCIsImRpc2NvdW50UHJpY2UiLCJhbW91bnQiLCJ0b3RhbCIsInNhbGVzTGltaXRDb3VudCIsInNvbGQiLCJvcmRlckNudCIsImNsb3NlQXQiLCJjbG9zaW5nRGF0ZSIsImVuZEF0IiwiZW5kRGF0ZSIsImlzVmFsaWQiLCJnZXREYWlseURpc2NvdW50cyIsImNsaWVudCIsInJlc3BvbnNlIiwicG9zdCIsImpzb24iLCJwYWdpbmciLCJjdXJyZW50IiwicGFnZSIsInRvdGFsUGFnZUNudCIsIml0ZW1zIiwiZGF0YSIsIm1hcCIsIml0ZW0iLCJnZXRSZWNlbnRTZWVuIiwiZ2V0SW50ZXJlc3RlZEJ5RnJpZW5kcyIsImdldEZlYXR1cmVkRGlzY291bnRzIiwiYnJhbmQiLCJsaWtlQnJhbmROYW1lIiwiaXNMaWtlZEJ5VXNlciIsImxpa2VCcmFuZFluIiwibGlzdCJdLCJtYXBwaW5ncyI6IkFBQ0EsU0FBU0EsVUFBVSxRQUFRLGFBQWEsQ0FBQTtBQUN4QyxTQUFTQyw0QkFBNEIsUUFBUSxhQUFhLENBQUE7QUF5RjFELE9BQU8sTUFBTUMsb0JBQW9CLEdBQUcsT0FBT0MsTUFBdUIsR0FBSyxDQUFDO1FBQ3RFQyxJQUFJLEVBQUVELE1BQU0sQ0FBQ0UsU0FBUyxJQUFJRixNQUFNLENBQUNHLEtBQUs7UUFDdENDLEtBQUssRUFBRUosTUFBTSxDQUFDSyxRQUFRLElBQUlMLE1BQU0sQ0FBQ00scUJBQXFCO1FBQ3REQyxPQUFPLEVBQUU7WUFDUEMsUUFBUSxFQUFFUixNQUFNLENBQUNTLFVBQVU7WUFDM0JDLFVBQVUsRUFBRVYsTUFBTSxDQUFDVyxhQUFhO1NBQ2pDO1FBQ0RDLE1BQU0sRUFBRTtZQUNOQyxLQUFLLEVBQUViLE1BQU0sQ0FBQ2MsZUFBZTtZQUM3QkMsSUFBSSxFQUFFZixNQUFNLENBQUNnQixRQUFRO1NBQ3RCO1FBQ0RDLE9BQU8sRUFBRW5CLDRCQUE0QixDQUFDRSxNQUFNLENBQUNrQixXQUFXLENBQUM7UUFDekRDLEtBQUssRUFBRXJCLDRCQUE0QixDQUFDRSxNQUFNLENBQUNvQixPQUFPLENBQUM7UUFDbkRDLE9BQU8sRUFBRXJCLE1BQU0sQ0FBQ3FCLE9BQU8sS0FBSyxHQUFHO0tBQ2hDLENBQUM7QUFBQSxDQUFBO0FBTUYsT0FBTyxNQUFNQyxpQkFBaUIsR0FBRyxP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